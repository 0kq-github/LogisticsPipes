// TODO signing, cursegradle, language

plugins {
    id 'fabric-loom' version '0.2.5-SNAPSHOT'
    id 'maven-publish'
    id 'org.jetbrains.kotlin.jvm' version '1.3.50'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.3.50'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile) {
    kotlinOptions.jvmTarget = '1.8'
    kotlinOptions.freeCompilerArgs += '-Xjvm-default=enable'
}

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    jcenter()
    maven {
        name = "BuildCraft"
        url = "https://mod-buildcraft.com/maven"
    }
    maven {
        url = 'https://maven.therealfarfetchd.dev'
    }
}

minecraft {
}

dependencies {
    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
    // You may need to force-disable transitiveness on them.

    implementation(group: "net.fabricmc", name: "fabric-language-kotlin", version: fabric_kotlin_version) {
        exclude module: 'fabric-loader'
    }

    modImplementation "alexiil.mc.lib:libblockattributes-all:${project.lba_version}"

    modImplementation("com.lettuce.fudge:fabric-drawer:${project.drawer_version}") {
        exclude module: 'fabric-language-kotlin'
    }

    modImplementation "io.github.prospector:modmenu:${project.modmenu_version}"

    modImplementation("therealfarfetchd.qcommon:cfg:${project.cfg_version}") {
        exclude module: 'fabric-language-kotlin'
        exclude module: 'fabric-loader'
    }

    modRuntime("me.shedaniel:RoughlyEnoughItems:${rei_version}") {
        exclude group: 'net.fabricmc.fabric-api'
        exclude module: 'modmenu'
    }

    compileOnly "org.projectlombok:lombok:${lombok_version}"
    implementation 'com.google.code.findbugs:jsr305:3.0.2'

    testImplementation 'org.junit.jupiter:junit-jupiter:5.4.+'
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

sourceSets {
    main.java.srcDirs += 'common'
    main.resources.srcDirs += 'resources'
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from "LICENSE.md"
}

test {
    reports {
        html.enabled = true
    }
}

tasks.withType(Test) {
    useJUnitPlatform()
    testLogging {
        events("passed", "skipped", "failed")
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        // mavenLocal()
    }
}